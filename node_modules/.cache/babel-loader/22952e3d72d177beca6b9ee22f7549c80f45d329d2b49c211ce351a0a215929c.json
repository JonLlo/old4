{"ast":null,"code":"var _jsxFileName = \"/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/features/Home/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Post from '../Post/Post';\nimport PostLoading from '../Post/PostLoading';\nimport { fetchPosts, selectFilteredPosts, setSearchTerm, fetchComments } from '../../store/redditSlice';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const reddit = useSelector(state => state.reddit);\n  const {\n    isLoading,\n    error,\n    searchTerm,\n    selectedSubreddit\n  } = reddit;\n  const posts = useSelector(selectFilteredPosts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchPosts(selectedSubreddit));\n  }, [selectedSubreddit]);\n  const onToggleComments = index => {\n    const getComments = permalink => {\n      dispatch(fetchComments(index, permalink));\n    };\n    return getComments;\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(AnimatedList, {\n      animation: \"zoom\",\n      children: Array(getRandomNumber(3, 10)).fill( /*#__PURE__*/_jsxDEV(PostLoading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 45\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Failed to load posts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => dispatch(fetchPosts(selectedSubreddit)),\n        children: \"Try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n  if (posts.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"No posts matching \\\"\", searchTerm, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => dispatch(setSearchTerm('')),\n        children: \"Go home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      onToggleComments: onToggleComments(index)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_s(Home, \"JuqcKANxww3DCxulD5DDQ9RmRKI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Post","PostLoading","fetchPosts","selectFilteredPosts","setSearchTerm","fetchComments","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","reddit","state","isLoading","error","searchTerm","selectedSubreddit","posts","dispatch","onToggleComments","index","getComments","permalink","AnimatedList","animation","children","Array","getRandomNumber","fill","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onClick","length","map","post","id","_c","$RefreshReg$"],"sources":["/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/features/Home/Home.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Post from '../Post/Post';\nimport PostLoading from '../Post/PostLoading';\nimport {\n  fetchPosts,\n  selectFilteredPosts,\n  setSearchTerm,\n  fetchComments,\n} from '../../store/redditSlice';\nimport './Home.css';\n\nconst Home = () => {\n  const reddit = useSelector((state) => state.reddit);\n  const { isLoading, error, searchTerm, selectedSubreddit } = reddit;\n  const posts = useSelector(selectFilteredPosts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPosts(selectedSubreddit));\n  }, [selectedSubreddit]);\n\n  const onToggleComments = (index) => {\n    const getComments = (permalink) => {\n      dispatch(fetchComments(index, permalink));\n    };\n\n    return getComments;\n  };\n\n  if (isLoading) {\n    return (\n      <AnimatedList animation=\"zoom\">\n        {Array(getRandomNumber(3, 10)).fill(<PostLoading />)}\n      </AnimatedList>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"error\">\n        <h2>Failed to load posts.</h2>\n        <button\n          type=\"button\"\n          onClick={() => dispatch(fetchPosts(selectedSubreddit))}\n        >\n          Try again\n        </button>\n      </div>\n    );\n  }\n  \n  if (posts.length === 0) {\n    return (\n      <div className=\"error\">\n        <h2>No posts matching &quot;{searchTerm}&quot;</h2>\n        <button type=\"button\" onClick={() => dispatch(setSearchTerm(''))}>\n          Go home\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {posts.map((post, index) => (\n        <Post\n          key={post.id}\n          post={post}\n          onToggleComments={onToggleComments(index)}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}