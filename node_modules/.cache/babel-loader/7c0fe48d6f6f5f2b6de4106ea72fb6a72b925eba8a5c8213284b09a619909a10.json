{"ast":null,"code":"var _jsxFileName = \"/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/features/Header/Header.js\",\n  _s = $RefreshSig$();\nimport { API_ROOT } from './your-api-file-path'; // Import the API_ROOT constant\nimport { useDispatch } from 'react-redux';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Header = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [searchValue, setSearchValue] = useState('');\n  const handleSubredditChange = async event => {\n    event.preventDefault();\n    try {\n      const subredditPosts = await getSubredditPosts(searchValue); // Pass searchValue to the API function\n      // Now you can do something with the filtered subredditPosts, like dispatching them to Redux store\n      console.log('Filtered posts:', subredditPosts);\n    } catch (error) {\n      console.error('Error fetching subreddit posts:', error);\n    }\n  };\n  const handleChange = event => {\n    setSearchValue(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubredditChange,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search posts...\",\n      value: searchValue,\n      onChange: handleChange // letters show in box when you type them\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"3eaUIDrHvZ2aHzoQwJOXCsv/L5o=\", false, function () {\n  return [useDispatch];\n});\n_c = Header;\nconst getSubredditPosts = async subreddit => {\n  const response = await fetch(`${API_ROOT}/r/${subreddit}.json`); // Corrected URL construction\n  const json = await response.json();\n\n  // No changes needed for filtering based on searchValue\n\n  return json.data.children.map(post => post.data);\n};\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["API_ROOT","useDispatch","React","useState","jsxDEV","_jsxDEV","Header","_s","dispatch","searchValue","setSearchValue","handleSubredditChange","event","preventDefault","subredditPosts","getSubredditPosts","console","log","error","handleChange","target","value","onSubmit","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","subreddit","response","fetch","json","data","map","post","$RefreshReg$"],"sources":["/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/features/Header/Header.js"],"sourcesContent":["import { API_ROOT } from './your-api-file-path'; // Import the API_ROOT constant\nimport { useDispatch } from 'react-redux';\nimport React, { useState } from 'react';\n\nexport const Header = () => {\n  const dispatch = useDispatch();\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleSubredditChange = async (event) => {\n    event.preventDefault();\n    try {\n      const subredditPosts = await getSubredditPosts(searchValue); // Pass searchValue to the API function\n      // Now you can do something with the filtered subredditPosts, like dispatching them to Redux store\n      console.log('Filtered posts:', subredditPosts);\n    } catch (error) {\n      console.error('Error fetching subreddit posts:', error);\n    }\n  };\n\n  const handleChange = (event) => {\n    setSearchValue(event.target.value);\n  };\n\n  return (\n    <form onSubmit={handleSubredditChange}>\n      <input\n        type=\"text\"\n        placeholder=\"Search posts...\"\n        value={searchValue}\n        onChange={handleChange} // letters show in box when you type them\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nconst getSubredditPosts = async (subreddit) => {\n  const response = await fetch(`${API_ROOT}/r/${subreddit}.json`); // Corrected URL construction\n  const json = await response.json();\n\n  // No changes needed for filtering based on searchValue\n\n  return json.data.children.map((post) => post.data);\n};"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,sBAAsB,CAAC,CAAC;AACjD,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMQ,qBAAqB,GAAG,MAAOC,KAAK,IAAK;IAC7CA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI;MACF,MAAMC,cAAc,GAAG,MAAMC,iBAAiB,CAACN,WAAW,CAAC,CAAC,CAAC;MAC7D;MACAO,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,cAAc,CAAC;IAChD,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED,MAAMC,YAAY,GAAIP,KAAK,IAAK;IAC9BF,cAAc,CAACE,KAAK,CAACQ,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,oBACEhB,OAAA;IAAMiB,QAAQ,EAAEX,qBAAsB;IAAAY,QAAA,gBACpClB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BJ,KAAK,EAAEZ,WAAY;MACnBiB,QAAQ,EAAEP,YAAa,CAAC;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFzB,OAAA;MAAQmB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAACvB,EAAA,CA9BWD,MAAM;EAAA,QACAL,WAAW;AAAA;AAAA8B,EAAA,GADjBzB,MAAM;AAgCnB,MAAMS,iBAAiB,GAAG,MAAOiB,SAAS,IAAK;EAC7C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAElC,QAAS,MAAKgC,SAAU,OAAM,CAAC,CAAC,CAAC;EACjE,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;;EAElC;;EAEA,OAAOA,IAAI,CAACC,IAAI,CAACb,QAAQ,CAACc,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACF,IAAI,CAAC;AACpD,CAAC;AAAC,IAAAL,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}