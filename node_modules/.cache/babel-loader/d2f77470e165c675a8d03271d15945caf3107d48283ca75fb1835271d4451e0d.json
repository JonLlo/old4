{"ast":null,"code":"var _jsxFileName = \"/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/features/Home/Home.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Post from '../Post/Post';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const reddit = useSelector(state => state.reddit);\n  const {\n    isLoading,\n    error,\n    searchTerm,\n    selectedSubreddit\n  } = reddit;\n  const posts = useSelector(selectFilteredPosts);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchPosts(selectedSubreddit));\n  }, [selectedSubreddit, dispatch]);\n  const onToggleComments = index => {\n    const getComments = permalink => {\n      dispatch(fetchComments(index, permalink));\n    };\n    return getComments;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Failed to load posts.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => dispatch(fetchPosts(selectedSubreddit)),\n        children: \"Try again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : posts.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"No posts matching \\\"\", searchTerm, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => dispatch(setSearchTerm('')),\n        children: \"Go home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        onToggleComments: onToggleComments(index)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"JuqcKANxww3DCxulD5DDQ9RmRKI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Post","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","reddit","state","isLoading","error","searchTerm","selectedSubreddit","posts","selectFilteredPosts","dispatch","fetchPosts","onToggleComments","index","getComments","permalink","fetchComments","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","length","setSearchTerm","map","post","id","_c","$RefreshReg$"],"sources":["/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/features/Home/Home.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Post from '../Post/Post';\nimport './Home.css';\n\nconst Home = () => {\n  const reddit = useSelector((state) => state.reddit);\n  const { isLoading, error, searchTerm, selectedSubreddit } = reddit;\n  const posts = useSelector(selectFilteredPosts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPosts(selectedSubreddit));\n  }, [selectedSubreddit, dispatch]);\n\n  const onToggleComments = (index) => {\n    const getComments = (permalink) => {\n      dispatch(fetchComments(index, permalink));\n    };\n    return getComments;\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <div className=\"loading\">\n          <p>error</p>\n        </div>\n      ) : error ? (\n        <div className=\"error\">\n          <h2>Failed to load posts.</h2>\n          <button type=\"button\" onClick={() => dispatch(fetchPosts(selectedSubreddit))}>\n            Try again\n          </button>\n        </div>\n      ) : posts.length === 0 ? (\n        <div className=\"error\">\n          <h2>No posts matching \"{searchTerm}\"</h2>\n          <button type=\"button\" onClick={() => dispatch(setSearchTerm(''))}>\n            Go home\n          </button>\n        </div>\n      ) : (\n        <div className=\"posts\">\n          {posts.map((post, index) => (\n            <Post key={post.id} post={post} onToggleComments={onToggleComments(index)} />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}