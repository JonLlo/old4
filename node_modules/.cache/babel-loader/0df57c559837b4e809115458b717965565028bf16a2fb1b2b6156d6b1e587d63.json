{"ast":null,"code":"var _jsxFileName = \"/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/features/Header/Header.js\",\n  _s = $RefreshSig$();\nimport { useDispatch } from 'react-redux';\nimport React, { useState } from 'react';\nimport { setSearchTerm } from '../../reducers/searchtermReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Header = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [searchTermLocal, setSearchTermLocal] = useState('');\n  const onSearchTermChange = e => {\n    setSearchTermLocal(e.target.value);\n  };\n  const onSearchTermSubmit = e => {\n    e.preventDefault();\n    dispatch(setSearchTerm(searchTermLocal));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => handleSubredditChange(searchValue),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search posts...\",\n      value: searchValue,\n      onChange: handleChange //letters show in box when you type them\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"8cBHNG9hR1ap7piu6fcQD4EyMMk=\", false, function () {\n  return [useDispatch];\n});\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["useDispatch","React","useState","setSearchTerm","jsxDEV","_jsxDEV","Header","_s","dispatch","searchTermLocal","setSearchTermLocal","onSearchTermChange","e","target","value","onSearchTermSubmit","preventDefault","onSubmit","event","handleSubredditChange","searchValue","children","type","placeholder","onChange","handleChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/features/Header/Header.js"],"sourcesContent":["\nimport { useDispatch } from 'react-redux';\nimport React, { useState } from 'react';\nimport { setSearchTerm } from '../../reducers/searchtermReducer';\n\n\n\n\nexport const Header = () => {\n\n  const dispatch = useDispatch();\n  const [searchTermLocal, setSearchTermLocal] = useState('');\n\n\n  const onSearchTermChange = (e) => {\n    setSearchTermLocal(e.target.value);\n  };\n\n  const onSearchTermSubmit = (e) => {\n    e.preventDefault();\n    dispatch(setSearchTerm(searchTermLocal));\n  };\n\n  return (\n    <form onSubmit={(event) => handleSubredditChange(searchValue)}>\n<input\n  type=\"text\"\n  placeholder=\"Search posts...\"\n  value={searchValue}\n  onChange={handleChange} //letters show in box when you type them\n  \n/>\n    <button type=\"submit\">Search</button>\n  </form>\n  );\n};"],"mappings":";;AACA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKjE,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE1B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAG1D,MAAMS,kBAAkB,GAAIC,CAAC,IAAK;IAChCF,kBAAkB,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,kBAAkB,GAAIH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBR,QAAQ,CAACL,aAAa,CAACM,eAAe,CAAC,CAAC;EAC1C,CAAC;EAED,oBACEJ,OAAA;IAAMY,QAAQ,EAAGC,KAAK,IAAKC,qBAAqB,CAACC,WAAW,CAAE;IAAAC,QAAA,gBAClEhB,OAAA;MACEiB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BT,KAAK,EAAEM,WAAY;MACnBI,QAAQ,EAAEC,YAAa,CAAC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzB,CAAC,eACExB,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAET,CAAC;AAACtB,EAAA,CA3BWD,MAAM;EAAA,QAEAN,WAAW;AAAA;AAAA8B,EAAA,GAFjBxB,MAAM;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}