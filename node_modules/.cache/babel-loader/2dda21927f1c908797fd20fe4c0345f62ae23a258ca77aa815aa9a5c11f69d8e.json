{"ast":null,"code":"export const API_ROOT = 'https://www.reddit.com';\nexport const getSubredditPosts = async subreddit => {\n  const response = await fetch(`${API_ROOT}${subreddit}.json`);\n  const json = await response.json();\n  return json.data.children.map(post => post.data);\n};\nconst [comments, setComments] = useState([]);\nconst fetchComments = async () => {\n  try {\n    // Make API call to fetch comments for the post\n    // Replace 'YOUR_API_ENDPOINT' with the actual Reddit API endpoint for comments\n    const response = await fetch(`YOUR_API_ENDPOINT${post.id}/comments`);\n    const data = await response.json();\n    setComments(data.comments); // Assuming the response contains an array of comments\n  } catch (error) {\n    console.error('Error fetching comments:', error);\n  }\n};","map":{"version":3,"names":["API_ROOT","getSubredditPosts","subreddit","response","fetch","json","data","children","map","post","comments","setComments","useState","fetchComments","id","error","console"],"sources":["/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/api/reddit.js"],"sourcesContent":["export const API_ROOT = 'https://www.reddit.com';\n\nexport const getSubredditPosts = async (subreddit) => {\n    const response = await fetch(`${API_ROOT}${subreddit}.json`);\n    const json = await response.json();\n  \n    return json.data.children.map((post) => post.data);\n  };\n\n\n\n  const [comments, setComments] = useState([]);\n\n  const fetchComments = async () => {\n    try {\n      // Make API call to fetch comments for the post\n      // Replace 'YOUR_API_ENDPOINT' with the actual Reddit API endpoint for comments\n      const response = await fetch(`YOUR_API_ENDPOINT${post.id}/comments`);\n      const data = await response.json();\n      setComments(data.comments); // Assuming the response contains an array of comments\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n    }\n  };"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,wBAAwB;AAEhD,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,SAAS,IAAK;EAClD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,GAAEE,SAAU,OAAM,CAAC;EAC5D,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;EAElC,OAAOA,IAAI,CAACC,IAAI,CAACC,QAAQ,CAACC,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACH,IAAI,CAAC;AACpD,CAAC;AAID,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;AAE5C,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EAChC,IAAI;IACF;IACA;IACA,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,oBAAmBK,IAAI,CAACK,EAAG,WAAU,CAAC;IACpE,MAAMR,IAAI,GAAG,MAAMH,QAAQ,CAACE,IAAI,CAAC,CAAC;IAClCM,WAAW,CAACL,IAAI,CAACI,QAAQ,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;EAClD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}