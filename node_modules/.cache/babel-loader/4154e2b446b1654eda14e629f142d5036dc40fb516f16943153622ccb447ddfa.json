{"ast":null,"code":"var _jsxFileName = \"/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/index.js\",\n  _s = $RefreshSig$();\n// index.js\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport React, { useState } from 'react';\nimport { Provider } from 'react-redux';\nimport { Card } from './components/Card/Card';\nimport { Home } from './features/Home/Home';\nimport { createStore, combineReducers } from 'redux';\nimport { postsReducer } from './reducers/postsReducer'; // Import your postsReducer\nimport { counterReducer } from './reducers/counterReducer';\nimport { commentsReducer } from './reducers/commentsReducer';\nimport { Sidebar } from './features/Sidebar/Sidebar';\n\n// Redux store\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const rootReducer = combineReducers({\n  posts_red: postsReducer,\n  // This key 'posts' will be used to access the posts slice of state\n  // Add other reducers here if needed\n  counter_red: counterReducer,\n  comments_red: commentsReducer\n});\nexport const store = createStore(rootReducer);\n\n// Action creators\nexport const increment = () => ({\n  type: \"increment\",\n  payload: 1\n});\nexport const divide = () => ({\n  type: \"divide\",\n  payload: 2\n});\nexport const decrement = () => ({\n  type: \"decrement\",\n  payload: 1\n});\nexport const multiply = () => ({\n  type: \"multiply\",\n  payload: 2\n});\nexport const squared = () => ({\n  type: \"squared\",\n  payload: 2\n});\nexport const reset = () => ({\n  type: \"reset\"\n});\nexport const ParentComponent = () => {\n  _s();\n  const [currentSubreddit, setCurrentSubreddit] = useState('/r/FantasyPL');\n  const handleChangeSubreddit = subreddit => {\n    setCurrentSubreddit(subreddit);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      setSubreddit: handleChangeSubreddit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Home, {\n      p: currentSubreddit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n// Render the app\n_s(ParentComponent, \"EFB3Db/lOISxH2GLgdnDrMUrbxk=\");\n_c = ParentComponent;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(ParentComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 77,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\n// Log initial state and subscribe to store changes\nvar _c;\n$RefreshReg$(_c, \"ParentComponent\");","map":{"version":3,"names":["ReactDOM","App","React","useState","Provider","Card","Home","createStore","combineReducers","postsReducer","counterReducer","commentsReducer","Sidebar","jsxDEV","_jsxDEV","rootReducer","posts_red","counter_red","comments_red","store","increment","type","payload","divide","decrement","multiply","squared","reset","ParentComponent","_s","currentSubreddit","setCurrentSubreddit","handleChangeSubreddit","subreddit","children","setSubreddit","fileName","_jsxFileName","lineNumber","columnNumber","p","_c","render","StrictMode","document","getElementById","$RefreshReg$"],"sources":["/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/index.js"],"sourcesContent":["// index.js\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport React, { useState } from 'react';\nimport { Provider } from 'react-redux';\nimport { Card } from './components/Card/Card';\nimport { Home } from './features/Home/Home';\nimport { createStore, combineReducers} from 'redux';\nimport { postsReducer } from './reducers/postsReducer'; // Import your postsReducer\nimport { counterReducer } from './reducers/counterReducer';\nimport { commentsReducer } from './reducers/commentsReducer';\nimport { Sidebar } from './features/Sidebar/Sidebar';\n\n\n// Redux store\nexport const rootReducer = combineReducers({\n  posts_red: postsReducer, // This key 'posts' will be used to access the posts slice of state\n  // Add other reducers here if needed\n  counter_red: counterReducer,\n  comments_red: commentsReducer\n});\n\nexport const store = createStore(rootReducer);\n\n// Action creators\nexport const increment = () => ({\n  type: \"increment\",\n  payload: 1\n});\nexport const divide = () => ({\n  type: \"divide\",\n  payload: 2\n});\n\nexport const decrement = () => ({\n  type: \"decrement\",\n  payload: 1\n});\n\nexport const multiply = () => ({\n  type: \"multiply\",\n  payload: 2\n});\n\nexport const squared = () => ({\n  type: \"squared\",\n  payload: 2\n});\nexport const reset = () => ({\n  type: \"reset\",\n});\n\n\n\n\nexport const ParentComponent = () => {\n  const [currentSubreddit, setCurrentSubreddit] = useState('/r/FantasyPL');\n\n  const handleChangeSubreddit = (subreddit) => {\n    setCurrentSubreddit(subreddit);\n  };\n\n  return (\n    <div>\n      <Sidebar setSubreddit={handleChangeSubreddit} />\n      <Home p={currentSubreddit} />\n    </div>\n  );\n  }\n\n\n\n\n// Render the app\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      \n      <ParentComponent/>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// Log initial state and subscribe to store changes\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}