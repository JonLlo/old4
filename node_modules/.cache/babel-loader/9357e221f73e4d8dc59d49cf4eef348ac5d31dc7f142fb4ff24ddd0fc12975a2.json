{"ast":null,"code":"// postsReducer.js\nconst initialState = {\n  posts: [],\n  filteredPosts: [],\n  // New state property to hold filtered posts\n  isLoading: false,\n  error: null\n};\nexport const filterPosts = searchTerm => {\n  return {\n    type: 'FILTER_POSTS',\n    payload: searchTerm\n  };\n};\nexport const postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_POSTS_REQUEST':\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case 'FETCH_POSTS_SUCCESS':\n      return {\n        ...state,\n        posts: action.payload,\n        isLoading: false\n      };\n    case 'FETCH_POSTS_FAILURE':\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false\n      };\n    case 'FILTER_POSTS':\n      const searchTerm = action.payload.toLowerCase();\n      if (!searchTerm) {\n        // If search term is empty or null, reset filteredPosts to display all posts\n        return {\n          ...state,\n          filteredPosts: state.posts\n        };\n      } else {\n        const filteredPosts = state.posts.filter(post => post.title.toLowerCase().includes(searchTerm));\n        return {\n          ...state,\n          filteredPosts\n        };\n      }\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["initialState","posts","filteredPosts","isLoading","error","filterPosts","searchTerm","type","payload","postsReducer","state","action","toLowerCase","filter","post","title","includes"],"sources":["/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/reducers/postsReducer.js"],"sourcesContent":["// postsReducer.js\nconst initialState = {\n  posts: [],\n  filteredPosts: [], // New state property to hold filtered posts\n  isLoading: false,\n  error: null\n};\n\n\nexport const filterPosts = (searchTerm) => {\n  return {\n    type: 'FILTER_POSTS',\n    payload: searchTerm\n  };\n};\n\n\n\n\n\nexport const postsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_POSTS_REQUEST':\n      return { ...state, isLoading: true, error: null };\n    case 'FETCH_POSTS_SUCCESS':\n      return { ...state, posts: action.payload, isLoading: false };\n    case 'FETCH_POSTS_FAILURE':\n      return { ...state, error: action.payload, isLoading: false };\n      case 'FILTER_POSTS':\n        const searchTerm = action.payload.toLowerCase();\n        if (!searchTerm) {\n          // If search term is empty or null, reset filteredPosts to display all posts\n          return { ...state, filteredPosts: state.posts };\n        } else {\n          const filteredPosts = state.posts.filter(post =>\n            post.title.toLowerCase().includes(searchTerm)\n          );\n          return { ...state, filteredPosts };\n        }\n    default:\n      return state;\n  }\n};\n\n\n  \n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,aAAa,EAAE,EAAE;EAAE;EACnBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAGD,OAAO,MAAMC,WAAW,GAAIC,UAAU,IAAK;EACzC,OAAO;IACLC,IAAI,EAAE,cAAc;IACpBC,OAAO,EAAEF;EACX,CAAC;AACH,CAAC;AAMD,OAAO,MAAMG,YAAY,GAAGA,CAACC,KAAK,GAAGV,YAAY,EAAEW,MAAM,KAAK;EAC5D,QAAQA,MAAM,CAACJ,IAAI;IACjB,KAAK,qBAAqB;MACxB,OAAO;QAAE,GAAGG,KAAK;QAAEP,SAAS,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC;IACnD,KAAK,qBAAqB;MACxB,OAAO;QAAE,GAAGM,KAAK;QAAET,KAAK,EAAEU,MAAM,CAACH,OAAO;QAAEL,SAAS,EAAE;MAAM,CAAC;IAC9D,KAAK,qBAAqB;MACxB,OAAO;QAAE,GAAGO,KAAK;QAAEN,KAAK,EAAEO,MAAM,CAACH,OAAO;QAAEL,SAAS,EAAE;MAAM,CAAC;IAC5D,KAAK,cAAc;MACjB,MAAMG,UAAU,GAAGK,MAAM,CAACH,OAAO,CAACI,WAAW,CAAC,CAAC;MAC/C,IAAI,CAACN,UAAU,EAAE;QACf;QACA,OAAO;UAAE,GAAGI,KAAK;UAAER,aAAa,EAAEQ,KAAK,CAACT;QAAM,CAAC;MACjD,CAAC,MAAM;QACL,MAAMC,aAAa,GAAGQ,KAAK,CAACT,KAAK,CAACY,MAAM,CAACC,IAAI,IAC3CA,IAAI,CAACC,KAAK,CAACH,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACV,UAAU,CAC9C,CAAC;QACD,OAAO;UAAE,GAAGI,KAAK;UAAER;QAAc,CAAC;MACpC;IACJ;MACE,OAAOQ,KAAK;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}