{"ast":null,"code":"var _jsxFileName = \"/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/features/Home/Home.jsx\",\n  _s = $RefreshSig$();\n// Home.jsx\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Post } from '../Post/Post';\nimport { getSubredditPosts } from '../../api/reddit';\nimport './Home.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts_red.posts);\n  const searchTerm = useSelector(state => state.searchterm_red.searchTerm);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const subredditPosts = await getSubredditPosts();\n        dispatch({\n          type: 'FETCH_POSTS_SUCCESS',\n          payload: subredditPosts\n        });\n      } catch (error) {\n        console.error('Error fetching subreddit posts:', error);\n        dispatch({\n          type: 'FETCH_POSTS_FAILURE',\n          payload: error.message\n        });\n      }\n    };\n    fetchPosts();\n  }, [dispatch]);\n  const filteredPosts = posts.filter(post => post.title.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reddit Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredPosts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"pTYly+9wiK92XjqcuCYG2IpMEcw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Post","getSubredditPosts","jsxDEV","_jsxDEV","Home","_s","dispatch","posts","state","posts_red","searchTerm","searchterm_red","fetchPosts","subredditPosts","type","payload","error","console","message","filteredPosts","filter","post","title","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c","$RefreshReg$"],"sources":["/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/features/Home/Home.jsx"],"sourcesContent":["// Home.jsx\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Post } from '../Post/Post';\nimport { getSubredditPosts } from '../../api/reddit';\nimport './Home.css';\n\nexport const Home = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts_red.posts);\n  const searchTerm = useSelector(state => state.searchterm_red.searchTerm);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const subredditPosts = await getSubredditPosts();\n        dispatch({ type: 'FETCH_POSTS_SUCCESS', payload: subredditPosts });\n      } catch (error) {\n        console.error('Error fetching subreddit posts:', error);\n        dispatch({ type: 'FETCH_POSTS_FAILURE', payload: error.message });\n      }\n    };\n\n    fetchPosts();\n  }, [dispatch]);\n\n  const filteredPosts = posts.filter(post =>\n    post.title.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"home\">\n      <h1>Reddit Posts</h1>\n      <ul>\n        {filteredPosts.map(post => (\n          <li key={post.id}>\n            <Post post={post} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,iBAAiB,QAAQ,kBAAkB;AACpD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,OAAO,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,SAAS,CAACF,KAAK,CAAC;EACzD,MAAMG,UAAU,GAAGX,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACG,cAAc,CAACD,UAAU,CAAC;EAExEb,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,cAAc,GAAG,MAAMZ,iBAAiB,CAAC,CAAC;QAChDK,QAAQ,CAAC;UAAEQ,IAAI,EAAE,qBAAqB;UAAEC,OAAO,EAAEF;QAAe,CAAC,CAAC;MACpE,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvDV,QAAQ,CAAC;UAAEQ,IAAI,EAAE,qBAAqB;UAAEC,OAAO,EAAEC,KAAK,CAACE;QAAQ,CAAC,CAAC;MACnE;IACF,CAAC;IAEDN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,MAAMa,aAAa,GAAGZ,KAAK,CAACa,MAAM,CAACC,IAAI,IACrCA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACd,UAAU,CAACa,WAAW,CAAC,CAAC,CAC5D,CAAC;EAED,oBACEpB,OAAA;IAAKsB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBvB,OAAA;MAAAuB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrB3B,OAAA;MAAAuB,QAAA,EACGP,aAAa,CAACY,GAAG,CAACV,IAAI,iBACrBlB,OAAA;QAAAuB,QAAA,eACEvB,OAAA,CAACH,IAAI;UAACqB,IAAI,EAAEA;QAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADbT,IAAI,CAACW,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACzB,EAAA,CAnCWD,IAAI;EAAA,QACEN,WAAW,EACdC,WAAW,EACNA,WAAW;AAAA;AAAAkC,EAAA,GAHnB7B,IAAI;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}