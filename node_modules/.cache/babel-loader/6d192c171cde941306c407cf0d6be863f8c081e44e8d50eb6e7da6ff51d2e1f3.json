{"ast":null,"code":"// index.js\nimport React from'react';import ReactDOM from'react-dom';import'./index.css';import App from'./App';import{Provider}from'react-redux';import{Card}from'./components/Card/Card';import{Home}from'./features/Home/Home';import{createStore,combineReducers}from'redux';import{postsReducer}from'./reducers/postsReducer';// Import your postsReducer\nimport{counterReducer}from'./reducers/counterReducer';import{commentsReducer}from'./reducers/commentsReducer';import{subredditReducer}from'./reducers/subredditReducer';import{Sidebar}from'./features/Sidebar/Sidebar';import{Header}from'./features/Header/Header';import{searchTermReducer}from'./reducers/searchtermReducer';// Redux store\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const rootReducer=combineReducers({posts_red:postsReducer,// This key 'posts' will be used to access the posts slice of state\n// Add other reducers here if needed\ncounter_red:counterReducer,comments_red:commentsReducer,subreddit_red:subredditReducer,searchterm_red:searchTermReducer});export const store=createStore(rootReducer);// Action creators\nexport const increment=()=>({type:\"increment\",payload:1});export const reset=()=>({type:\"reset\"});export const multiply=()=>({type:\"multiply\",payload:2});// Render the app\nReactDOM.render(/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsxs(React.StrictMode,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(App,{}),/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsx(Home,{})]})}),document.getElementById('root'));// Log initial state and subscribe to store changes","map":{"version":3,"names":["React","ReactDOM","App","Provider","Card","Home","createStore","combineReducers","postsReducer","counterReducer","commentsReducer","subredditReducer","Sidebar","Header","searchTermReducer","jsx","_jsx","jsxs","_jsxs","rootReducer","posts_red","counter_red","comments_red","subreddit_red","searchterm_red","store","increment","type","payload","reset","multiply","render","children","StrictMode","document","getElementById"],"sources":["/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/index.js"],"sourcesContent":["// index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { Card } from './components/Card/Card';\nimport { Home } from './features/Home/Home';\nimport { createStore, combineReducers } from 'redux';\nimport { postsReducer } from './reducers/postsReducer'; // Import your postsReducer\nimport { counterReducer } from './reducers/counterReducer';\nimport { commentsReducer } from './reducers/commentsReducer';\nimport { subredditReducer } from './reducers/subredditReducer';\nimport { Sidebar } from './features/Sidebar/Sidebar';\nimport { Header } from './features/Header/Header';\nimport { searchTermReducer } from './reducers/searchtermReducer';\n\n\n// Redux store\nexport const rootReducer = combineReducers({\n  posts_red: postsReducer, // This key 'posts' will be used to access the posts slice of state\n  // Add other reducers here if needed\n  counter_red: counterReducer,\n  comments_red: commentsReducer,\n  subreddit_red: subredditReducer,\n  searchterm_red: searchTermReducer\n});\n\nexport const store = createStore(rootReducer);\n\n// Action creators\nexport const increment = () => ({\n  type: \"increment\",\n  payload: 1\n});\nexport const reset = () => ({\n  type: \"reset\"\n});\nexport const multiply = () => ({\n  type: \"multiply\",\n  payload: 2\n});\n\n\n// Render the app\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Header />\n      <App/>\n      <Sidebar/>\n      <Home />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// Log initial state and subscribe to store changes\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,WAAW,CAChC,MAAO,aAAa,CACpB,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,OAASC,QAAQ,KAAQ,aAAa,CACtC,OAASC,IAAI,KAAQ,wBAAwB,CAC7C,OAASC,IAAI,KAAQ,sBAAsB,CAC3C,OAASC,WAAW,CAAEC,eAAe,KAAQ,OAAO,CACpD,OAASC,YAAY,KAAQ,yBAAyB,CAAE;AACxD,OAASC,cAAc,KAAQ,2BAA2B,CAC1D,OAASC,eAAe,KAAQ,4BAA4B,CAC5D,OAASC,gBAAgB,KAAQ,6BAA6B,CAC9D,OAASC,OAAO,KAAQ,4BAA4B,CACpD,OAASC,MAAM,KAAQ,0BAA0B,CACjD,OAASC,iBAAiB,KAAQ,8BAA8B,CAGhE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,MAAO,MAAM,CAAAC,WAAW,CAAGZ,eAAe,CAAC,CACzCa,SAAS,CAAEZ,YAAY,CAAE;AACzB;AACAa,WAAW,CAAEZ,cAAc,CAC3Ba,YAAY,CAAEZ,eAAe,CAC7Ba,aAAa,CAAEZ,gBAAgB,CAC/Ba,cAAc,CAAEV,iBAClB,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAW,KAAK,CAAGnB,WAAW,CAACa,WAAW,CAAC,CAE7C;AACA,MAAO,MAAM,CAAAO,SAAS,CAAGA,CAAA,IAAO,CAC9BC,IAAI,CAAE,WAAW,CACjBC,OAAO,CAAE,CACX,CAAC,CAAC,CACF,MAAO,MAAM,CAAAC,KAAK,CAAGA,CAAA,IAAO,CAC1BF,IAAI,CAAE,OACR,CAAC,CAAC,CACF,MAAO,MAAM,CAAAG,QAAQ,CAAGA,CAAA,IAAO,CAC7BH,IAAI,CAAE,UAAU,CAChBC,OAAO,CAAE,CACX,CAAC,CAAC,CAGF;AAEA3B,QAAQ,CAAC8B,MAAM,cACbf,IAAA,CAACb,QAAQ,EAACsB,KAAK,CAAEA,KAAM,CAAAO,QAAA,cACrBd,KAAA,CAAClB,KAAK,CAACiC,UAAU,EAAAD,QAAA,eACfhB,IAAA,CAACH,MAAM,GAAE,CAAC,cACVG,IAAA,CAACd,GAAG,GAAC,CAAC,cACNc,IAAA,CAACJ,OAAO,GAAC,CAAC,cACVI,IAAA,CAACX,IAAI,GAAE,CAAC,EACQ,CAAC,CACX,CAAC,CACX6B,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC,CAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}