{"ast":null,"code":"var _jsxFileName = \"/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/features/Post/Post.js\",\n  _s = $RefreshSig$();\nimport './Post.css';\nimport { API_ROOT } from '../../api/reddit';\nimport React, { useState, useEffect } from 'react';\nimport Card from '../../components/Card/Card';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  comment\n}) => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"comment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: comment.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_c = Comment;\nexport const Post = ({\n  post\n}) => {\n  _s();\n  const [showComments, setShowComments] = useState(false);\n  const [comments, setComments] = useState([]);\n  const filteredPosts = useSelector(state => state => state.posts_red.filtered); // Access filtered posts from Redux store\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      const response = await fetch(`https://www.reddit.com${post.permalink}.json`);\n      const redditData = await response.json();\n      setComments(redditData[1].data.children.map(comment => comment.data));\n    };\n    if (showComments) {\n      fetchComments();\n    }\n  }, [showComments, post.permalink]);\n  const toggleComments = () => {\n    setShowComments(!showComments);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [filteredPosts.map(filteredPost => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Author: \", post.author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Number of Comments: \", post.num_comments]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleComments,\n          children: showComments ? 'Hide Comments' : 'Show Comments'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)), showComments && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"v0DUcnsG63Z+tWwwPxR1Qntd5NI=\", false, function () {\n  return [useSelector];\n});\n_c2 = Post;\nvar _c, _c2;\n$RefreshReg$(_c, \"Comment\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"names":["API_ROOT","React","useState","useEffect","Card","useSelector","jsxDEV","_jsxDEV","Comment","comment","className","children","author","fileName","_jsxFileName","lineNumber","columnNumber","body","_c","Post","post","_s","showComments","setShowComments","comments","setComments","filteredPosts","state","posts_red","filtered","fetchComments","response","fetch","permalink","redditData","json","data","map","toggleComments","filteredPost","title","num_comments","onClick","id","_c2","$RefreshReg$"],"sources":["/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/features/Post/Post.js"],"sourcesContent":["import './Post.css';\nimport { API_ROOT } from '../../api/reddit';\nimport React, { useState, useEffect } from 'react';\nimport Card from '../../components/Card/Card';\nimport { useSelector } from 'react-redux';\n\n\nconst Comment = ({ comment }) => {\n  return (\n    <Card className=\"comment\">\n      <div>\n        <p>{comment.author}</p>\n        <p>{comment.body}</p>\n      </div>\n    </Card>\n  );\n};\n\nexport const Post = ({ post }) => {\n  const [showComments, setShowComments] = useState(false);\n  const [comments, setComments] = useState([]);\n  const filteredPosts = useSelector(state => state => state.posts_red.filtered); // Access filtered posts from Redux store\n\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      const response = await fetch(`https://www.reddit.com${post.permalink}.json`);\n      const redditData = await response.json();\n      setComments(redditData[1].data.children.map(comment => comment.data));\n    };\n\n    if (showComments) {\n      fetchComments();\n    }\n  }, [showComments, post.permalink]);\n\n  const toggleComments = () => {\n    setShowComments(!showComments);\n  };\n\n  return (\n    <div>\n      {filteredPosts.map(filteredPost => (\n      <Card className=\"card\">\n        <div>\n          <h2>{post.title}</h2>\n          <p>Author: {post.author}</p>\n          <p>{post.body}</p>\n          <p>Number of Comments: {post.num_comments}</p>\n          <button onClick={toggleComments}>\n            {showComments ? 'Hide Comments' : 'Show Comments'}\n          </button>\n        </div>\n      </Card>))}\n      {showComments && (\n        <div>\n          <h3>Comments</h3>\n          {comments.map(comment => (\n            <Comment key={comment.id} comment={comment} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};"],"mappings":";;AAAA,OAAO,YAAY;AACnB,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAC/B,oBACEF,OAAA,CAACH,IAAI;IAACM,SAAS,EAAC,SAAS;IAAAC,QAAA,eACvBJ,OAAA;MAAAI,QAAA,gBACEJ,OAAA;QAAAI,QAAA,EAAIF,OAAO,CAACG;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBT,OAAA;QAAAI,QAAA,EAAIF,OAAO,CAACQ;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACE,EAAA,GATIV,OAAO;AAWb,OAAO,MAAMW,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMwB,aAAa,GAAGrB,WAAW,CAACsB,KAAK,IAAIA,KAAK,IAAIA,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,CAAC,CAAC;;EAG/E1B,SAAS,CAAC,MAAM;IACd,MAAM2B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yBAAwBZ,IAAI,CAACa,SAAU,OAAM,CAAC;MAC5E,MAAMC,UAAU,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MACxCV,WAAW,CAACS,UAAU,CAAC,CAAC,CAAC,CAACE,IAAI,CAACzB,QAAQ,CAAC0B,GAAG,CAAC5B,OAAO,IAAIA,OAAO,CAAC2B,IAAI,CAAC,CAAC;IACvE,CAAC;IAED,IAAId,YAAY,EAAE;MAChBQ,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACR,YAAY,EAAEF,IAAI,CAACa,SAAS,CAAC,CAAC;EAElC,MAAMK,cAAc,GAAGA,CAAA,KAAM;IAC3Bf,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,oBACEf,OAAA;IAAAI,QAAA,GACGe,aAAa,CAACW,GAAG,CAACE,YAAY,iBAC/BhC,OAAA,CAACH,IAAI;MAACM,SAAS,EAAC,MAAM;MAAAC,QAAA,eACpBJ,OAAA;QAAAI,QAAA,gBACEJ,OAAA;UAAAI,QAAA,EAAKS,IAAI,CAACoB;QAAK;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBT,OAAA;UAAAI,QAAA,GAAG,UAAQ,EAACS,IAAI,CAACR,MAAM;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BT,OAAA;UAAAI,QAAA,EAAIS,IAAI,CAACH;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBT,OAAA;UAAAI,QAAA,GAAG,sBAAoB,EAACS,IAAI,CAACqB,YAAY;QAAA;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9CT,OAAA;UAAQmC,OAAO,EAAEJ,cAAe;UAAA3B,QAAA,EAC7BW,YAAY,GAAG,eAAe,GAAG;QAAe;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAE,CAAC,EACRM,YAAY,iBACXf,OAAA;MAAAI,QAAA,gBACEJ,OAAA;QAAAI,QAAA,EAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChBQ,QAAQ,CAACa,GAAG,CAAC5B,OAAO,iBACnBF,OAAA,CAACC,OAAO;QAAkBC,OAAO,EAAEA;MAAQ,GAA7BA,OAAO,CAACkC,EAAE;QAAA9B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAC9C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACK,EAAA,CA9CWF,IAAI;EAAA,QAGOd,WAAW;AAAA;AAAAuC,GAAA,GAHtBzB,IAAI;AAAA,IAAAD,EAAA,EAAA0B,GAAA;AAAAC,YAAA,CAAA3B,EAAA;AAAA2B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}