{"ast":null,"code":"var _jsxFileName = \"/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/index.js\";\n// index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { Card } from './components/Card/Card';\nimport { Home } from './features/Home/Home';\nimport { createStore, combineReducers } from 'redux';\nimport { postsReducer } from './reducers/postsReducer'; // Import your postsReducer\nimport { counterReducer } from './reducers/counterReducer';\nimport { commentsReducer } from './reducers/commentsReducer';\nimport { subredditReducer } from './reducers/subredditReducer';\nimport { Sidebar } from './features/Sidebar/Sidebar';\nimport { Header } from './features/Header/Header';\nimport { searchTermReducer } from './reducers/searchtermReducer';\n\n// Redux store\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const rootReducer = combineReducers({\n  posts_red: postsReducer,\n  // This key 'posts' will be used to access the posts slice of state\n  // Add other reducers here if needed\n  counter_red: counterReducer,\n  comments_red: commentsReducer,\n  subreddit_red: subredditReducer,\n  searchterm_red: searchTermReducer\n});\nexport const store = createStore(rootReducer);\n\n// Action creators\nexport const increment = () => ({\n  type: \"increment\",\n  payload: 1\n});\nexport const reset = () => ({\n  type: \"reset\"\n});\nexport const multiply = () => ({\n  type: \"multiply\",\n  payload: 2\n});\n\n// Render the app\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\n// Log initial state and subscribe to store changes","map":{"version":3,"names":["React","ReactDOM","App","Provider","Card","Home","createStore","combineReducers","postsReducer","counterReducer","commentsReducer","subredditReducer","Sidebar","Header","searchTermReducer","jsxDEV","_jsxDEV","rootReducer","posts_red","counter_red","comments_red","subreddit_red","searchterm_red","store","increment","type","payload","reset","multiply","render","children","StrictMode","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById"],"sources":["/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/portfolio_project_reddit/src/index.js"],"sourcesContent":["// index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { Card } from './components/Card/Card';\nimport { Home } from './features/Home/Home';\nimport { createStore, combineReducers } from 'redux';\nimport { postsReducer } from './reducers/postsReducer'; // Import your postsReducer\nimport { counterReducer } from './reducers/counterReducer';\nimport { commentsReducer } from './reducers/commentsReducer';\nimport { subredditReducer } from './reducers/subredditReducer';\nimport { Sidebar } from './features/Sidebar/Sidebar';\nimport { Header } from './features/Header/Header';\nimport { searchTermReducer } from './reducers/searchtermReducer';\n\n\n// Redux store\nexport const rootReducer = combineReducers({\n  posts_red: postsReducer, // This key 'posts' will be used to access the posts slice of state\n  // Add other reducers here if needed\n  counter_red: counterReducer,\n  comments_red: commentsReducer,\n  subreddit_red: subredditReducer,\n  searchterm_red: searchTermReducer\n});\n\nexport const store = createStore(rootReducer);\n\n// Action creators\nexport const increment = () => ({\n  type: \"increment\",\n  payload: 1\n});\nexport const reset = () => ({\n  type: \"reset\",\n});\nexport const multiply = () => ({\n  type: \"multiply\",\n  payload: 2,\n});\n\n// Render the app\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Header />\n      <App/>\n      <Sidebar/>\n      <Home />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// Log initial state and subscribe to store changes\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,IAAI,QAAQ,wBAAwB;AAC7C,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,SAASC,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,SAASC,YAAY,QAAQ,yBAAyB,CAAC,CAAC;AACxD,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,gBAAgB,QAAQ,6BAA6B;AAC9D,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,MAAM,QAAQ,0BAA0B;AACjD,SAASC,iBAAiB,QAAQ,8BAA8B;;AAGhE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,GAAGV,eAAe,CAAC;EACzCW,SAAS,EAAEV,YAAY;EAAE;EACzB;EACAW,WAAW,EAAEV,cAAc;EAC3BW,YAAY,EAAEV,eAAe;EAC7BW,aAAa,EAAEV,gBAAgB;EAC/BW,cAAc,EAAER;AAClB,CAAC,CAAC;AAEF,OAAO,MAAMS,KAAK,GAAGjB,WAAW,CAACW,WAAW,CAAC;;AAE7C;AACA,OAAO,MAAMO,SAAS,GAAGA,CAAA,MAAO;EAC9BC,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE;AACX,CAAC,CAAC;AACF,OAAO,MAAMC,KAAK,GAAGA,CAAA,MAAO;EAC1BF,IAAI,EAAE;AACR,CAAC,CAAC;AACF,OAAO,MAAMG,QAAQ,GAAGA,CAAA,MAAO;EAC7BH,IAAI,EAAE,UAAU;EAChBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;;AAEAzB,QAAQ,CAAC4B,MAAM,eACbb,OAAA,CAACb,QAAQ;EAACoB,KAAK,EAAEA,KAAM;EAAAO,QAAA,eACrBd,OAAA,CAAChB,KAAK,CAAC+B,UAAU;IAAAD,QAAA,gBACfd,OAAA,CAACH,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVnB,OAAA,CAACd,GAAG;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACNnB,OAAA,CAACJ,OAAO;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACVnB,OAAA,CAACX,IAAI;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACX,CAAC,EACXC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;;AAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}