{"ast":null,"code":"var _jsxFileName = \"/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/my_reddit_app/src/index.js\";\n// index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  counter: 0\n};\n\n// Reducer function\nfunction counterReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"increment\":\n      return {\n        counter: state.counter + action.payload\n      };\n    case \"decrement\":\n      return {\n        counter: state.counter - action.payload\n      };\n    default:\n      return state;\n  }\n}\n\n// Redux store\nconst store = createStore(counterReducer);\n\n// Action creators\nexport const increment = () => ({\n  type: \"increment\",\n  payload: 1\n});\nexport const decrement = () => ({\n  type: \"decrement\",\n  payload: 1\n});\n\n// Render the app\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 5\n}, this));\n\n// Log initial state and subscribe to store changes\nconsole.log(store.getState());\nstore.subscribe(() => console.log(\"Store is changed and state is\", store.getState()));","map":{"version":3,"names":["React","ReactDOM","App","createStore","Provider","jsxDEV","_jsxDEV","initialState","counter","counterReducer","state","action","type","payload","store","increment","decrement","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","getState","subscribe"],"sources":["/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/my_reddit_app/src/index.js"],"sourcesContent":["// index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\n// Initial state\nconst initialState = {\n  counter: 0\n};\n\n// Reducer function\nfunction counterReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"increment\":\n      return { counter: state.counter + action.payload };\n    case \"decrement\":\n      return { counter: state.counter - action.payload };\n    default:\n      return state;\n  }\n}\n\n// Redux store\nconst store = createStore(counterReducer);\n\n// Action creators\nexport const increment = () => ({\n  type: \"increment\",\n  payload: 1\n});\n\nexport const decrement = () => ({\n  type: \"decrement\",\n  payload: 1\n});\n\n// Render the app\nReactDOM.render(\n\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n\n\n);\n\n// Log initial state and subscribe to store changes\nconsole.log(store.getState());\nstore.subscribe(() => console.log(\"Store is changed and state is\", store.getState()));\n\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,WAAW,QAAQ,OAAO;AACnC,SAASC,QAAQ,QAAQ,aAAa;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE;AACX,CAAC;;AAED;AACA,SAASC,cAAcA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,EAAE;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QAAEJ,OAAO,EAAEE,KAAK,CAACF,OAAO,GAAGG,MAAM,CAACE;MAAQ,CAAC;IACpD,KAAK,WAAW;MACd,OAAO;QAAEL,OAAO,EAAEE,KAAK,CAACF,OAAO,GAAGG,MAAM,CAACE;MAAQ,CAAC;IACpD;MACE,OAAOH,KAAK;EAChB;AACF;;AAEA;AACA,MAAMI,KAAK,GAAGX,WAAW,CAACM,cAAc,CAAC;;AAEzC;AACA,OAAO,MAAMM,SAAS,GAAGA,CAAA,MAAO;EAC9BH,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMG,SAAS,GAAGA,CAAA,MAAO;EAC9BJ,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAZ,QAAQ,CAACgB,MAAM,eAEXX,OAAA,CAACN,KAAK,CAACkB,UAAU;EAAAC,QAAA,eACfb,OAAA,CAACJ,GAAG;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CAGtB,CAAC;;AAED;AACAC,OAAO,CAACC,GAAG,CAACX,KAAK,CAACY,QAAQ,CAAC,CAAC,CAAC;AAC7BZ,KAAK,CAACa,SAAS,CAAC,MAAMH,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEX,KAAK,CAACY,QAAQ,CAAC,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}