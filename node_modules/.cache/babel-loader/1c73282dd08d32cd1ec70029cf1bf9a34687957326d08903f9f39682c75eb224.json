{"ast":null,"code":"// postsReducer.js\nconst initialState={posts:[],isLoading:false,error:null};export const postsReducer=function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'FETCH_POSTS_REQUEST':return{...state,isLoading:true,error:null};case'FETCH_POSTS_SUCCESS':return{...state,posts:action.payload,isLoading:false};case'FETCH_POSTS_FAILURE':return{...state,error:action.payload,isLoading:false};default:return state;}};","map":{"version":3,"names":["initialState","posts","isLoading","error","postsReducer","state","arguments","length","undefined","action","type","payload"],"sources":["/Users/Codingcourse/Projects/PORTFOLIO_PROJECTS/reddit_pp_4/src/reducers/postsReducer.js"],"sourcesContent":["// postsReducer.js\nconst initialState = {\n    posts: [],\n    isLoading: false,\n    error: null\n  };\n  \n  export const postsReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'FETCH_POSTS_REQUEST':\n        return { ...state, isLoading: true, error: null };\n      case 'FETCH_POSTS_SUCCESS':\n        return { ...state, posts: action.payload, isLoading: false };\n      case 'FETCH_POSTS_FAILURE':\n        return { ...state, error: action.payload, isLoading: false };\n      default:\n        return state;\n    }\n  };\n\n\n  \n"],"mappings":"AAAA;AACA,KAAM,CAAAA,YAAY,CAAG,CACjBC,KAAK,CAAE,EAAE,CACTC,SAAS,CAAE,KAAK,CAChBC,KAAK,CAAE,IACT,CAAC,CAED,MAAO,MAAM,CAAAC,YAAY,CAAG,QAAAA,CAAA,CAAkC,IAAjC,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGN,YAAY,IAAE,CAAAS,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CACvD,OAAQC,MAAM,CAACC,IAAI,EACjB,IAAK,qBAAqB,CACxB,MAAO,CAAE,GAAGL,KAAK,CAAEH,SAAS,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CACnD,IAAK,qBAAqB,CACxB,MAAO,CAAE,GAAGE,KAAK,CAAEJ,KAAK,CAAEQ,MAAM,CAACE,OAAO,CAAET,SAAS,CAAE,KAAM,CAAC,CAC9D,IAAK,qBAAqB,CACxB,MAAO,CAAE,GAAGG,KAAK,CAAEF,KAAK,CAAEM,MAAM,CAACE,OAAO,CAAET,SAAS,CAAE,KAAM,CAAC,CAC9D,QACE,MAAO,CAAAG,KAAK,CAChB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}